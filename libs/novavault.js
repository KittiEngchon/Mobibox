// NovaVault SDK URL (mock ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏à‡∏£‡∏¥‡∏á‡∏ñ‡πâ‡∏≤‡∏°‡∏µ endpoint)
const NOVAVAULT_API = "https://api.novavault.xyz/user"; // ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡∏ê‡∏≤‡∏ô

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• NovaVault ‡∏Ç‡∏≠‡∏á address ‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≠‡∏¢‡∏π‡πà
async function getUserFromNovaVault(address) {
  try {
    const res = await fetch(`${NOVAVAULT_API}/${address}`);
    if (!res.ok) throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö NovaVault");
    const data = await res.json();

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô console (‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡πÇ‡∏¢‡∏ô‡πÑ‡∏õ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πá‡πÑ‡∏î‡πâ)
    console.log("üéØ NovaVault User:", data);

    return {
      did: data.did,
      trustScore: data.trustScore,
      kyc: data.kycStatus,
      badges: data.badges || []
    };
  } catch (err) {
    console.error("‚ùå NovaVault fetch error:", err);
    showToast("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• NovaVault ‡πÑ‡∏î‡πâ");
    return null;
  }
}

// ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° wallet ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏ä‡πà‡∏ô
// const user = await getUserFromNovaVault(walletAddress);
